{"ast":null,"code":"import _regeneratorRuntime from \"/home/ahump/homework/Project_3_React_UI_API/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ahump/homework/Project_3_React_UI_API/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this;\n\nimport React from 'react';\n\nvar PostUserDeck = function PostUserDeck(props) {\n  var postUsersDeck =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var data, addCard, addCardsJson;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              data = _this.state.cardsAdded;\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch('http://localhost:9000/addCard', {\n                method: \"POST\",\n                // *GET, POST, PUT, DELETE, etc.\n                headers: {\n                  \"Content-Type\": \"application/json\" // \"Content-Type\": \"application/x-www-form-urlencoded\",\n\n                },\n                body: JSON.stringify({\n                  data: data\n                }) // body data type must match \"Content-Type\" header\n\n              });\n\n            case 4:\n              addCard = _context.sent;\n              _context.next = 7;\n              return addCard.json();\n\n            case 7:\n              addCardsJson = _context.sent;\n\n              _this.setState({\n                cardsAdded: addCardsJson\n              }); //needed to turn your information into human readable data\n\n\n              return _context.abrupt(\"return\", addCardsJson);\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0, 'catch caught an error');\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[1, 12]]);\n    }));\n\n    return function postUsersDeck() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var componentDidMount = function componentDidMount() {\n    _this.postUsersDeck().then(function (data) {\n      return console.log(data, 'POST ROUTE FULL OF MAAAGIC');\n    });\n  };\n\n  var cardsAddedFunc = function cardsAddedFunc() {\n    _this.state.cardsAdded.push();\n  };\n};\n\nexport default PostUserDeck;","map":{"version":3,"sources":["/home/ahump/homework/Project_3_React_UI_API/src/Routes/PostUserRoute.js"],"names":["React","PostUserDeck","props","postUsersDeck","data","state","cardsAdded","fetch","method","headers","body","JSON","stringify","addCard","json","addCardsJson","setState","console","log","componentDidMount","then","cardsAddedFunc","push"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAS;AAC1B,MAAMC,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,cAAAA,IADY,GACL,KAAI,CAACC,KAAL,CAAWC,UADN;AAAA;AAAA;AAAA,qBAGQC,KAAK,CAAC,+BAAD,EAAkC;AACzDC,gBAAAA,MAAM,EAAE,MADiD;AACzC;AAChBC,gBAAAA,OAAO,EAAE;AACL,kCAAgB,kBADX,CAEL;;AAFK,iBAFgD;AAMzDC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACR,kBAAAA,IAAI,EAAJA;AAAD,iBAAf,CANmD,CAM3B;;AAN2B,eAAlC,CAHb;;AAAA;AAGRS,cAAAA,OAHQ;AAAA;AAAA,qBAWaA,OAAO,CAACC,IAAR,EAXb;;AAAA;AAWRC,cAAAA,YAXQ;;AAYd,cAAA,KAAI,CAACC,QAAL,CAAc;AAAEV,gBAAAA,UAAU,EAACS;AAAb,eAAd,EAZc,CAad;;;AAbc,+CAePA,YAfO;;AAAA;AAAA;AAAA;AAiBdE,cAAAA,OAAO,CAACC,GAAR,cAAiB,uBAAjB;AAjBc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbf,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAqBA,MAAMgB,iBAAiB,GAAG,SAApBA,iBAAoB,GAAI;AAC1B,IAAA,KAAI,CAAChB,aAAL,GAAqBiB,IAArB,CAA0B,UAAChB,IAAD;AAAA,aAAUa,OAAO,CAACC,GAAR,CAAYd,IAAZ,EAAkB,4BAAlB,CAAV;AAAA,KAA1B;AACH,GAFD;;AAGA,MAAMiB,cAAc,GAAG,SAAjBA,cAAiB,GAAI;AACvB,IAAA,KAAI,CAAChB,KAAL,CAAWC,UAAX,CAAsBgB,IAAtB;AACH,GAFD;AAGH,CA5BD;;AA8BA,eAAerB,YAAf","sourcesContent":["import React from 'react';\n\nconst PostUserDeck = (props)=>{\n    const postUsersDeck = async () => {\n        const data = this.state.cardsAdded\n        try {\n            const addCard = await fetch('http://localhost:9000/addCard', {\n                method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    // \"Content-Type\": \"application/x-www-form-urlencoded\",\n                },\n                body: JSON.stringify({data}), // body data type must match \"Content-Type\" header\n            })\n            const addCardsJson = await addCard.json()\n            this.setState({ cardsAdded:addCardsJson})\n            //needed to turn your information into human readable data\n            \n            return addCardsJson\n        } catch (err) {\n            console.log(err, 'catch caught an error')\n            return err\n        }\n    }\n    const componentDidMount = ()=>{\n        this.postUsersDeck().then((data) => console.log(data, 'POST ROUTE FULL OF MAAAGIC'))\n    }\n    const cardsAddedFunc = ()=>{\n        this.state.cardsAdded.push()\n    }\n}\n\nexport default PostUserDeck"]},"metadata":{},"sourceType":"module"}