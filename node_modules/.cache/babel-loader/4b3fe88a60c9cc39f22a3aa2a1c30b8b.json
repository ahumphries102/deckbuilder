{"ast":null,"code":"import _regeneratorRuntime from \"/home/ahump/homework/Project_3_React_UI_API/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ahump/homework/Project_3_React_UI_API/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this;\n\nimport React from 'react';\n\nvar postUsersDeck =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(props) {\n    var data, addCard, addCardsJson;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = _this.state.cardsAdded;\n            console.log(props.usersDeck);\n            _context.prev = 2;\n            _context.next = 5;\n            return fetch('http://localhost:9000/addCard', {\n              method: \"POST\",\n              // *GET, POST, PUT, DELETE, etc.\n              headers: {\n                \"Content-Type\": \"application/json\" // \"Content-Type\": \"application/x-www-form-urlencoded\",\n\n              },\n              body: JSON.stringify({\n                data: data\n              }) // body data type must match \"Content-Type\" header\n\n            });\n\n          case 5:\n            addCard = _context.sent;\n            _context.next = 8;\n            return addCard.json();\n\n          case 8:\n            addCardsJson = _context.sent;\n\n            _this.setState({\n              cardsAdded: addCardsJson\n            }); //needed to turn your information into human readable data\n\n\n            return _context.abrupt(\"return\", addCardsJson);\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(_context.t0, 'catch caught an error');\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[2, 13]]);\n  }));\n\n  return function postUsersDeck(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar componentDidMount = function componentDidMount() {\n  _this.postUsersDeck().then(function (data) {\n    return console.log(data, 'POST ROUTE FULL OF MAAAGIC');\n  });\n};\n\nvar cardsAddedFunc = function cardsAddedFunc() {\n  _this.state.cardsAdded.push();\n};\n\nexport default postUsersDeck;","map":{"version":3,"sources":["/home/ahump/homework/Project_3_React_UI_API/src/Routes/PostUserRoute.js"],"names":["React","postUsersDeck","props","data","state","cardsAdded","console","log","usersDeck","fetch","method","headers","body","JSON","stringify","addCard","json","addCardsJson","setState","componentDidMount","then","cardsAddedFunc","push"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACRC,YAAAA,IADQ,GACD,KAAI,CAACC,KAAL,CAAWC,UADV;AAEdC,YAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,SAAlB;AAFc;AAAA;AAAA,mBAIYC,KAAK,CAAC,+BAAD,EAAkC;AACzDC,cAAAA,MAAM,EAAE,MADiD;AACzC;AAChBC,cAAAA,OAAO,EAAE;AACL,gCAAgB,kBADX,CAEL;;AAFK,eAFgD;AAMzDC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACX,gBAAAA,IAAI,EAAJA;AAAD,eAAf,CANmD,CAM3B;;AAN2B,aAAlC,CAJjB;;AAAA;AAIJY,YAAAA,OAJI;AAAA;AAAA,mBAYiBA,OAAO,CAACC,IAAR,EAZjB;;AAAA;AAYJC,YAAAA,YAZI;;AAaV,YAAA,KAAI,CAACC,QAAL,CAAc;AAAEb,cAAAA,UAAU,EAACY;AAAb,aAAd,EAbU,CAcV;;;AAdU,6CAgBHA,YAhBG;;AAAA;AAAA;AAAA;AAkBVX,YAAAA,OAAO,CAACC,GAAR,cAAiB,uBAAjB;AAlBU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbN,aAAa;AAAA;AAAA;AAAA,GAAnB;;AAsBI,IAAMkB,iBAAiB,GAAG,SAApBA,iBAAoB,GAAI;AAC1B,EAAA,KAAI,CAAClB,aAAL,GAAqBmB,IAArB,CAA0B,UAACjB,IAAD;AAAA,WAAUG,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkB,4BAAlB,CAAV;AAAA,GAA1B;AACH,CAFD;;AAGA,IAAMkB,cAAc,GAAG,SAAjBA,cAAiB,GAAI;AACvB,EAAA,KAAI,CAACjB,KAAL,CAAWC,UAAX,CAAsBiB,IAAtB;AACP,CAFG;;AAKJ,eAAerB,aAAf","sourcesContent":["import React from 'react';\n\nconst postUsersDeck = async (props) => {\n        const data = this.state.cardsAdded\n        console.log(props.usersDeck)\n        try {\n            const addCard = await fetch('http://localhost:9000/addCard', {\n                method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    // \"Content-Type\": \"application/x-www-form-urlencoded\",\n                },\n                body: JSON.stringify({data}), // body data type must match \"Content-Type\" header\n            })\n            const addCardsJson = await addCard.json()\n            this.setState({ cardsAdded:addCardsJson})\n            //needed to turn your information into human readable data\n            \n            return addCardsJson\n        } catch (err) {\n            console.log(err, 'catch caught an error')\n            return err\n        }\n    }\n    const componentDidMount = ()=>{\n        this.postUsersDeck().then((data) => console.log(data, 'POST ROUTE FULL OF MAAAGIC'))\n    }\n    const cardsAddedFunc = ()=>{\n        this.state.cardsAdded.push()\n}\n\n\nexport default postUsersDeck"]},"metadata":{},"sourceType":"module"}