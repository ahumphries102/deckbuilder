{"ast":null,"code":"import _regeneratorRuntime from \"/home/ahump/homework/Project_3_React_UI_API/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ahump/homework/Project_3_React_UI_API/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/ahump/homework/Project_3_React_UI_API/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ahump/homework/Project_3_React_UI_API/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ahump/homework/Project_3_React_UI_API/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ahump/homework/Project_3_React_UI_API/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ahump/homework/Project_3_React_UI_API/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ahump/homework/Project_3_React_UI_API/src/Routes/PostUserRoute.js\";\nimport React, { Component } from 'react';\n\nvar PostUserDeck =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostUserDeck, _Component);\n\n  function PostUserDeck() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostUserDeck);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostUserDeck)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.postUsersDeck =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(props) {\n        var data, dataToDb, sqlScriptsArr, addCard, addCardsJson;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = _this.props.usersDeck;\n                dataToDb = data.map(function (elements, i) {\n                  return {\n                    name: elements.name\n                  };\n                });\n                sqlScriptsArr = dataToDb.map(function (elements, i) {\n                  return 'INSERT INTO card_table (name, mana_cost, cmc, type_line, oracle_text, power, toughness, colors, color_id, setif, rarity) VALUES ($`${i}`)';\n                });\n                console.log(\"Here are our scripts\", sqlScriptsArr);\n                _context.prev = 4;\n                _context.next = 7;\n                return fetch('http://localhost:9000/addCard', {\n                  method: \"POST\",\n                  // *GET, POST, PUT, DELETE, etc.\n                  headers: {\n                    \"Content-Type\": \"application/json\" // \"Content-Type\": \"application/x-www-form-urlencoded\",\n\n                  },\n                  body: JSON.stringify({\n                    dataToDb: dataToDb\n                  }) // body data type must match \"Content-Type\" header\n\n                });\n\n              case 7:\n                addCard = _context.sent;\n                _context.next = 10;\n                return addCard.json();\n\n              case 10:\n                addCardsJson = _context.sent;\n\n                _this.setState({\n                  cardsAdded: addCardsJson\n                }); //needed to turn your information into human readable data\n\n\n                return _context.abrupt(\"return\", addCardsJson);\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](4);\n                console.log(_context.t0, 'catch caught an error');\n                return _context.abrupt(\"return\", _context.t0);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4, 15]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(PostUserDeck, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.postUsersDeck,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Save Deck\"));\n    }\n  }]);\n\n  return PostUserDeck;\n}(Component);\n\nexport { PostUserDeck as default };","map":{"version":3,"sources":["/home/ahump/homework/Project_3_React_UI_API/src/Routes/PostUserRoute.js"],"names":["React","Component","PostUserDeck","postUsersDeck","props","data","usersDeck","dataToDb","map","elements","i","name","sqlScriptsArr","console","log","fetch","method","headers","body","JSON","stringify","addCard","json","addCardsJson","setState","cardsAdded"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IACqBC,Y;;;;;;;;;;;;;;;;;;UACjBC,a;;;;;+BAAgB,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACNC,gBAAAA,IADM,GACC,MAAKD,KAAL,CAAWE,SADZ;AAGNC,gBAAAA,QAHM,GAGKF,IAAI,CAACG,GAAL,CAAS,UAACC,QAAD,EAAWC,CAAX,EAAe;AACrC,yBAAO;AAACC,oBAAAA,IAAI,EAACF,QAAQ,CAACE;AAAf,mBAAP;AACH,iBAFgB,CAHL;AAMNC,gBAAAA,aANM,GAMUL,QAAQ,CAACC,GAAT,CAAa,UAACC,QAAD,EAAWC,CAAX,EAAe;AAC9C,yBAAO,2IAAP;AACH,iBAFqB,CANV;AASZG,gBAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,aAApC;AATY;AAAA;AAAA,uBAWcG,KAAK,CAAC,+BAAD,EAAkC;AACzDC,kBAAAA,MAAM,EAAE,MADiD;AACzC;AAChBC,kBAAAA,OAAO,EAAE;AACL,oCAAgB,kBADX,CAEL;;AAFK,mBAFgD;AAMzDC,kBAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAACb,oBAAAA,QAAQ,EAARA;AAAD,mBAAf,CANoD,CAMzB;;AANyB,iBAAlC,CAXnB;;AAAA;AAWFc,gBAAAA,OAXE;AAAA;AAAA,uBAmBmBA,OAAO,CAACC,IAAR,EAnBnB;;AAAA;AAmBFC,gBAAAA,YAnBE;;AAoBR,sBAAKC,QAAL,CAAc;AAAEC,kBAAAA,UAAU,EAACF;AAAb,iBAAd,EApBQ,CAqBR;;;AArBQ,iDAuBDA,YAvBC;;AAAA;AAAA;AAAA;AAyBRV,gBAAAA,OAAO,CAACC,GAAR,cAAiB,uBAAjB;AAzBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BA6BR;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,KAAKX,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ;AAKH;;;;EApCqCF,S;;SAArBC,Y","sourcesContent":["import React, { Component } from 'react';\nexport default class PostUserDeck extends Component {\n    postUsersDeck = async (props) => {\n        const data = this.props.usersDeck\n\n        const dataToDb = data.map((elements, i)=>{\n            return {name:elements.name}\n        })\n        const sqlScriptsArr = dataToDb.map((elements, i)=>{\n            return 'INSERT INTO card_table (name, mana_cost, cmc, type_line, oracle_text, power, toughness, colors, color_id, setif, rarity) VALUES ($`${i}`)'\n        })\n        console.log(\"Here are our scripts\", sqlScriptsArr)\n        try {\n            const addCard = await fetch('http://localhost:9000/addCard', {\n                method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    // \"Content-Type\": \"application/x-www-form-urlencoded\",\n                },\n                body:JSON.stringify({dataToDb}) // body data type must match \"Content-Type\" header\n            })\n            const addCardsJson = await addCard.json()\n            this.setState({ cardsAdded:addCardsJson})\n            //needed to turn your information into human readable data\n            \n            return addCardsJson\n        } catch (err) {\n            console.log(err, 'catch caught an error')\n            return err\n        }\n    }\n    render(){\n        return( \n            <div>\n                <button onClick={this.postUsersDeck}>Save Deck</button>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}