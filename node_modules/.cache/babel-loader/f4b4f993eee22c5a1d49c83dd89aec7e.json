{"ast":null,"code":"import _regeneratorRuntime from \"/home/ahump/homework/Project_3_React_UI_API/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ahump/homework/Project_3_React_UI_API/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this;\n\nimport React from 'react';\n\nvar usersDeckLogic = function usersDeckLogic(props) {\n  var postUsersDeck =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var data, addCard, addCardsJson;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              data = _this.state.cardsAdded;\n              console.log(props.usersDeck);\n              _context.prev = 2;\n              _context.next = 5;\n              return fetch('http://localhost:9000/addCard', {\n                method: \"POST\",\n                // *GET, POST, PUT, DELETE, etc.\n                headers: {\n                  \"Content-Type\": \"application/json\" // \"Content-Type\": \"application/x-www-form-urlencoded\",\n\n                },\n                body: JSON.stringify({\n                  data: data\n                }) // body data type must match \"Content-Type\" header\n\n              });\n\n            case 5:\n              addCard = _context.sent;\n              _context.next = 8;\n              return addCard.json();\n\n            case 8:\n              addCardsJson = _context.sent;\n\n              _this.setState({\n                cardsAdded: addCardsJson\n              }); //needed to turn your information into human readable data\n\n\n              return _context.abrupt(\"return\", addCardsJson);\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(_context.t0, 'catch caught an error');\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[2, 13]]);\n    }));\n\n    return function postUsersDeck() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var componentDidMount = function componentDidMount() {\n    _this.postUsersDeck().then(function (data) {\n      return console.log(data, 'POST ROUTE FULL OF MAAAGIC');\n    });\n  };\n};\n\nexport default postUsersDeck;","map":{"version":3,"sources":["/home/ahump/homework/Project_3_React_UI_API/src/Routes/PostUserRoute.js"],"names":["React","usersDeckLogic","props","postUsersDeck","data","state","cardsAdded","console","log","usersDeck","fetch","method","headers","body","JSON","stringify","addCard","json","addCardsJson","setState","componentDidMount","then"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAS;AAC5B,MAAMC,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACRC,cAAAA,IADQ,GACD,KAAI,CAACC,KAAL,CAAWC,UADV;AAEdC,cAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,SAAlB;AAFc;AAAA;AAAA,qBAIYC,KAAK,CAAC,+BAAD,EAAkC;AACzDC,gBAAAA,MAAM,EAAE,MADiD;AACzC;AAChBC,gBAAAA,OAAO,EAAE;AACL,kCAAgB,kBADX,CAEL;;AAFK,iBAFgD;AAMzDC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACX,kBAAAA,IAAI,EAAJA;AAAD,iBAAf,CANmD,CAM3B;;AAN2B,eAAlC,CAJjB;;AAAA;AAIJY,cAAAA,OAJI;AAAA;AAAA,qBAYiBA,OAAO,CAACC,IAAR,EAZjB;;AAAA;AAYJC,cAAAA,YAZI;;AAaV,cAAA,KAAI,CAACC,QAAL,CAAc;AAAEb,gBAAAA,UAAU,EAACY;AAAb,eAAd,EAbU,CAcV;;;AAdU,+CAgBHA,YAhBG;;AAAA;AAAA;AAAA;AAkBVX,cAAAA,OAAO,CAACC,GAAR,cAAiB,uBAAjB;AAlBU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbL,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAsBI,MAAMiB,iBAAiB,GAAG,SAApBA,iBAAoB,GAAI;AAC1B,IAAA,KAAI,CAACjB,aAAL,GAAqBkB,IAArB,CAA0B,UAACjB,IAAD;AAAA,aAAUG,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkB,4BAAlB,CAAV;AAAA,KAA1B;AACH,GAFD;AAGP,CA1BD;;AA4BA,eAAeD,aAAf","sourcesContent":["import React from 'react';\n\nconst usersDeckLogic = (props)=>{\n    const postUsersDeck = async () => {\n            const data = this.state.cardsAdded\n            console.log(props.usersDeck)\n            try {\n                const addCard = await fetch('http://localhost:9000/addCard', {\n                    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n                    },\n                    body: JSON.stringify({data}), // body data type must match \"Content-Type\" header\n                })\n                const addCardsJson = await addCard.json()\n                this.setState({ cardsAdded:addCardsJson})\n                //needed to turn your information into human readable data\n                \n                return addCardsJson\n            } catch (err) {\n                console.log(err, 'catch caught an error')\n                return err\n            }\n        }\n        const componentDidMount = ()=>{\n            this.postUsersDeck().then((data) => console.log(data, 'POST ROUTE FULL OF MAAAGIC'))\n        }\n}\n\nexport default postUsersDeck"]},"metadata":{},"sourceType":"module"}