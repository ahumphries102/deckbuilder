{"map":"{\"version\":3,\"sources\":[\"/home/ahump/gitpages/ahumphries102.github.io/deckbuilder/src/Login/Login.js\",\"/home/ahump/gitpages/ahumphries102.github.io/deckbuilder/src/MagicCards/MagicCards.js\",\"/home/ahump/gitpages/ahumphries102.github.io/deckbuilder/src/UserDeck/UserDeck.js\",\"/home/ahump/gitpages/ahumphries102.github.io/deckbuilder/src/Routes/UserRoute.js\",\"/home/ahump/gitpages/ahumphries102.github.io/deckbuilder/src/Routes/Navigation.js\",\"/home/ahump/gitpages/ahumphries102.github.io/deckbuilder/src/Routes/PostUserRoute.js\",\"/home/ahump/gitpages/ahumphries102.github.io/deckbuilder/src/MainContainer/MainContainer.js\",\"/home/ahump/gitpages/ahumphries102.github.io/deckbuilder/src/MagicCardsApp.js\",\"/home/ahump/gitpages/ahumphries102.github.io/deckbuilder/src/serviceWorker.js\",\"/home/ahump/gitpages/ahumphries102.github.io/deckbuilder/src/index.js\"],\"names\":[\"Login\",\"state\",\"username\",\"password\",\"handleSubmit\",\"event\",\"preventDefault\",\"_this\",\"props\",\"login\",\"handleChange\",\"setState\",\"Object\",\"defineProperty\",\"currentTarget\",\"name\",\"value\",\"react_default\",\"a\",\"createElement\",\"onSubmit\",\"this\",\"type\",\"placeholder\",\"onChange\",\"Component\",\"magicList\",\"cardsList\",\"magicCards\",\"map\",\"i\",\"key\",\"className\",\"set\",\"rarity\",\"src\",\"image_uris\",\"large\",\"alt\",\"onClick\",\"addCard\",\"bind\",\"UserDeck\",\"newDeckArr\",\"usersDeck\",\"usersCards\",\"deleteCard\",\"normal\",\"GetUserDeck\",\"users\",\"getUsersDeck\",\"_callee\",\"usersJson\",\"regenerator_default\",\"wrap\",\"_context\",\"prev\",\"next\",\"fetch\",\"sent\",\"json\",\"abrupt\",\"t0\",\"console\",\"log\",\"stop\",\"then\",\"data\",\"Navigation\",\"Link\",\"to\",\"BrowserRouter\",\"exact\",\"path\",\"component\",\"Home\",\"UserRoute\",\"PostUserDeck\",\"postUsersDeck\",\"dataToDb\",\"addCardsJson\",\"elements\",\"mana_cost\",\"cmc\",\"type_line\",\"oracle_text\",\"power\",\"toughness\",\"colors\",\"color_id\",\"color_identity\",\"setif\",\"method\",\"headers\",\"Content-Type\",\"body\",\"JSON\",\"stringify\",\"cardsAdded\",\"MainContainer\",\"deckName\",\"getMagicCards\",\"magicApi\",\"magicData\",\"newUserDeck\",\"push\",\"splice\",\"Navigation_Navigation\",\"MagicCards_MagicCards\",\"src_UserDeck_UserDeck\",\"PostUserRoute_PostUserDeck\",\"MagicCards\",\"logged\",\"MainContainer_MainContainer\",\"Login_Login\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"MagicCardsApp_MagicCards\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from 'react'\\nimport '../App.css'\\n\\nexport default class Login extends Component {\\n    state = {\\n        username: '',\\n        password: ''\\n    }\\n\\n    handleSubmit = (event) => {\\n        //this will make sure that the form does not refresh the page on submit?\\n        event.preventDefault(event)\\n        this.props.login(this.state.username)\\n    }\\n\\n\\n\\n    handleChange = (event) => {\\n        this.setState({\\n            [event.currentTarget.name]: event.currentTarget.value,\\n        })\\n    }\\n\\n    render() {\\n        return (\\n        <div>\\n        \\t<h1>LOGIN!!!</h1>\\n            <form onSubmit={this.handleSubmit}>\\n                <input type='text' name=\\\"username\\\" placeholder=\\\"username\\\" value={this.state.username} onChange={this.handleChange} />\\n                <input type='password' name=\\\"password\\\" placeholder=\\\"password\\\" value={this.state.password} onChange={this.handleChange} />\\n                <input type='submit' value=\\\"Submit\\\" />\\n            </form>\\n        </div>\\n        )\\n    }\\n}\",\"import React from 'react'\\n\\n//This component will loop through the API we fetch and return a list for each card and a button.\\n//It is then displayed on the main page.\\nconst magicList = (props)=>{\\n\\tconst cardsList = props.magicCards.map((magicCards, i)=>{\\n\\t\\treturn <li key={i} className=\\\"three wide column\\\">{magicCards.name}, ({magicCards.set}), {magicCards.rarity}<img src={magicCards.image_uris.large} alt='magic cards' className='enlarge ui fluid image'/><button onClick={props.addCard.bind(null, i) }>Add to deck</button></li>\\n\\t})\\n\\treturn(\\n\\t\\t<div>\\n\\t{/*displaying the api we fetch*/}\\n\\t\\t\\t<ul className = \\\"ui grid\\\">\\n\\t\\t\\t\\t{cardsList}\\n\\t\\t\\t</ul>\\n\\n\\t\\t</div>\\n\\t)\\n}\\n\\nexport default magicList\",\"import React from 'react'\\nconst UserDeck = (props)=>{\\n\\t//map over the deck with a new array and display the cards name in the deck section\\n\\tconst newDeckArr = props.usersDeck.map((usersCards, i)=>{\\n\\t\\treturn <li className=\\\"cardWindow enlarge\\\" key={i} onClick={props.deleteCard.bind(null, i)}><img src={usersCards.image_uris.normal} alt='magic cards'/></li>\\n\\t})\\n\\treturn(\\n\\n\\t\\t<div>\\n\\t\\t\\t<ul >\\n\\t\\t\\t\\t{newDeckArr}\\n\\t\\t\\t</ul>\\n\\t\\t</div>\\n\\t)\\n}\\n\\t\\nexport default UserDeck\",\"import React, { Component } from 'react';\\n\\nexport default class GetUserDeck extends Component {\\n    //An incomplete component that is not used. It was designed with the intention of having multiple users that could view their magic cards\\n    state ={\\n        users:[]\\n    }\\n    getUsersDeck = async () => {\\n        try {\\n            const users = await fetch('http://localhost:9000/users')\\n            const usersJson = await users.json()\\n\\n            this.setState({ users:usersJson})\\n            //needed to turn your information into human readable data\\n            return usersJson\\n        } catch (err) {\\n            console.log(err, 'catch caught an error')\\n            return err\\n        }\\n    }\\n    componentDidMount() {\\n        this.getUsersDeck().then((data) => console.log(data, 'HOME ROUTE'))\\n    }\\n\\n    render(){\\n        return(\\n            <div>\\n                <h1>USERS ROUTE</h1>\\n            </div>\\n        )\\n    }\\n}\",\"import React, {Component} from 'react'\\nimport Home from '../MainContainer/MainContainer';\\nimport UserRoute from '../Routes/UserRoute'\\nimport { BrowserRouter as Route, Link } from 'react-router-dom';\\n\\nexport default class Navigation extends Component {\\n\\t//This is a stateless component that's basically just a navbar with some links\\n    render() {\\n        return (\\n\\t          <div className='App'>\\n\\t          <nav>\\n\\t            <Link to='/'>Home</Link>{' '}\\n                <button><Link to='/users'>Users Deck</Link>{' '}</button>\\n\\t          </nav>\\n\\t            <Route exact path='/Home' component={Home}/>\\n                <Route path='/users' component={UserRoute}/>\\n\\t          </div>\\n    \\t)\\n\\t}\\n}\",\"import React, { Component } from 'react';\\nexport default class PostUserDeck extends Component {\\n    //This is a stateless component designed to give access of the API that was fetched to the server\\n    //When a query is made it will make a POST request to the server which will save a card to the database\\n    postUsersDeck = async (props) => {\\n        const data = this.props.usersDeck\\n\\n        //We create a new array with JUST the values of the API's objects\\n        const dataToDb = data.map((elements, i)=>{\\n            return {name:elements.name, mana_cost:elements.mana_cost, cmc:elements.cmc, type_line:elements.type_line, oracle_text:elements.oracle_text, power:elements.power, toughness:elements.toughness, colors:elements.colors, color_id:elements.color_identity, setif:elements.set, rarity:elements.rarity}\\n        })\\n        try {\\n            const addCard = await fetch('http://localhost:9000/addCard', {\\n                method: \\\"POST\\\", // *GET, POST, PUT, DELETE, etc.\\n                headers: {\\n                    \\\"Content-Type\\\": \\\"application/json\\\",\\n                    // \\\"Content-Type\\\": \\\"application/x-www-form-urlencoded\\\",\\n                },\\n                //Here we turn or values into JSON and send it to the database, I'm pretty sure that's what's happening\\n                body:JSON.stringify({dataToDb}) // body data type must match \\\"Content-Type\\\" header\\n            })\\n            const addCardsJson = await addCard.json()\\n            this.setState({ cardsAdded:addCardsJson})\\n            //needed to turn your information into human readable data\\n            \\n            return addCardsJson\\n        } catch (err) {\\n            console.log(err, 'catch caught an error')\\n            return err\\n        }\\n    }\\n    render(){\\n        return( \\n            <div>\\n                <button onClick={this.postUsersDeck}>Save Deck</button>\\n            </div>\\n        )\\n    }\\n}\",\"import React, { Component } from \\\"react\\\";\\nimport MagicCards from \\\"../MagicCards/MagicCards\\\"\\nimport UserDeck from \\\"../UserDeck/UserDeck\\\"\\nimport Navigation from \\\"../Routes/Navigation\\\"\\nimport PostUserRoute from \\\"../Routes/PostUserRoute\\\"\\nimport { BrowserRouter as Router } from \\\"react-router-dom\\\";\\n\\nexport default class MainContainer extends Component {\\n    state = {\\n        magicCards: [],\\n        usersDeck: [],\\n        deckName:\\\"\\\"\\n    }\\n     //When the browser is ready it will fetch the API\\n     componentDidMount() {\\n            this.getMagicCards().then((data) => console.log(data, \\\"did mount\\\"))\\n    }\\n    //Fetch the API\\n    getMagicCards = async () => {\\n        try {\\n            const magicApi = await fetch(\\\"https://api.scryfall.com/cards/search?order=set&q=e%3Arna&unique=prints\\\")\\n            const magicData = await magicApi.json()\\n\\n            this.setState({ magicCards: magicData.data })\\n        } catch (err) {\\n            console.log(err, \\\"catch caught an error\\\")\\n            return err\\n        }\\n    }\\n    //This function pushes objects into the users new deck which appears on the right side of the browser.\\n    addCard = (i)=>{\\n        const newUserDeck = this.state.usersDeck\\n        //magicCards[i] is accessing the bind\\\"s index (i) in MagicCards.js\\n        newUserDeck.push(this.state.magicCards[i])\\n        this.setState({\\n            usersDeck: newUserDeck\\n        })\\n    }\\n    //this button will delete the chosen card from the users new deck\\n    deleteCard = (i)=>{\\n        const newUserDeck = this.state.usersDeck\\n        //deleting card at specific index using bind in UserDeck.js\\n        newUserDeck.splice(i,1)\\n        this.setState({\\n            usersDeck: newUserDeck\\n        })\\n    }\\n    render() {\\n        return (\\n        //Router is establishing links to other pages\\n          <Router>\\n            <section>\\n              <section className=\\\"transBg\\\">\\n                <h1>Deck Builder</h1>\\n                <img src=\\\"https://zone1-vgu.netdna-ssl.com/wp-content/uploads/2019/01/MagicThe-Gathering-Ravnica-Allegiance-New-Mechanics-Breakdown.jpg\\\" alt=\\\"hero\\\" className=\\\"heroBg\\\"/>\\n              </section>\\n              <section className = \\\"ui two column divided grid\\\">\\n                <div className = \\\"twelve wide column scroll\\\">\\n                {/* Inserting the Navigation into the main Container */}\\n                <Navigation />\\n            {/*Inserting the Magic cards component while also passing the magicCard state down and addCard function down */}\\n                  <MagicCards magicCards={this.state.magicCards} addCard={this.addCard}/>\\n                }\\n                </div>\\n                <div className = \\\"four wide column rightColumnScroll\\\">\\n                  <h2>New Deck</h2>\\n            {/*Inserting the Userdeck component while also passing the usersDeck state down and deleteCard function down */}\\n                  <UserDeck usersDeck = {this.state.usersDeck} deleteCard={this.deleteCard}/>\\n            {/*Inserting PosUserRoute and passing down the usersDeck state*/}\\n                  <PostUserRoute usersDeck = {this.state.usersDeck}/>\\n                </div>\\n              </section>\\n            </section>\\n          </Router>\\n        );\\n    }\\n}\",\"import React, { Component } from 'react';\\nimport Login from './Login/Login'\\nimport MainContainer from './MainContainer/MainContainer'\\n\\nexport default class MagicCards extends Component {\\n  state = {\\n    logged: true,\\n    username: ''\\n  }\\n\\n  login = (username) => {\\n    this.setState({\\n      logged: true,\\n      username: username\\n    })\\n  }\\n\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        {this.state.logged ? <MainContainer username={this.state.username} /> : <Login login={this.login} />}\\n      </div>\\n    );\\n  }\\n}\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport 'semantic-ui-css/semantic.min.css'\\nimport './App.css'\\nimport 'bootstrap/dist/css/bootstrap.min.css';\\n\\nimport 'semantic-ui-css/semantic.min.css';\\nimport MagicCardsApp from './MagicCardsApp';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<MagicCardsApp />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{15:function(e,t,a){},19:function(e,t,a){e.exports=a(31)},25:function(e,t,a){},31:function(e,t,a){\"use strict\";a.r(t);var n=a(0),r=a.n(n),c=a(16),s=a.n(c),o=(a(25),a(14),a(15),a(26),a(3)),l=a(4),u=a(6),i=a(5),m=a(7),d=a(17),h=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,r=new Array(n),c=0;c<n;c++)r[c]=arguments[c];return(a=Object(u.a)(this,(e=Object(i.a)(t)).call.apply(e,[this].concat(r)))).state={username:\"\",password:\"\"},a.handleSubmit=function(e){e.preventDefault(e),a.props.login(a.state.username)},a.handleChange=function(e){a.setState(Object(d.a)({},e.currentTarget.name,e.currentTarget.value))},a}return Object(m.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,r.a.createElement(\"h1\",null,\"LOGIN!!!\"),r.a.createElement(\"form\",{onSubmit:this.handleSubmit},r.a.createElement(\"input\",{type:\"text\",name:\"username\",placeholder:\"username\",value:this.state.username,onChange:this.handleChange}),r.a.createElement(\"input\",{type:\"password\",name:\"password\",placeholder:\"password\",value:this.state.password,onChange:this.handleChange}),r.a.createElement(\"input\",{type:\"submit\",value:\"Submit\"})))}}]),t}(n.Component),p=a(9),g=a.n(p),f=a(10),v=function(e){var t=e.magicCards.map(function(t,a){return r.a.createElement(\"li\",{key:a,className:\"three wide column\"},t.name,\", (\",t.set,\"), \",t.rarity,r.a.createElement(\"img\",{src:t.image_uris.large,alt:\"magic cards\",className:\"enlarge ui fluid image\"}),r.a.createElement(\"button\",{onClick:e.addCard.bind(null,a)},\"Add to deck\"))});return r.a.createElement(\"div\",null,r.a.createElement(\"ul\",{className:\"ui grid\"},t))},b=function(e){var t=e.usersDeck.map(function(t,a){return r.a.createElement(\"li\",{className:\"cardWindow enlarge\",key:a,onClick:e.deleteCard.bind(null,a)},r.a.createElement(\"img\",{src:t.image_uris.normal,alt:\"magic cards\"}))});return r.a.createElement(\"div\",null,r.a.createElement(\"ul\",null,t))},E=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,r=new Array(n),c=0;c<n;c++)r[c]=arguments[c];return(a=Object(u.a)(this,(e=Object(i.a)(t)).call.apply(e,[this].concat(r)))).state={users:[]},a.getUsersDeck=Object(f.a)(g.a.mark(function e(){var t,n;return g.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,fetch(\"http://localhost:9000/users\");case 3:return t=e.sent,e.next=6,t.json();case 6:return n=e.sent,a.setState({users:n}),e.abrupt(\"return\",n);case 11:return e.prev=11,e.t0=e.catch(0),console.log(e.t0,\"catch caught an error\"),e.abrupt(\"return\",e.t0);case 15:case\"end\":return e.stop()}},e,this,[[0,11]])})),a}return Object(m.a)(t,e),Object(l.a)(t,[{key:\"componentDidMount\",value:function(){this.getUsersDeck().then(function(e){return console.log(e,\"HOME ROUTE\")})}},{key:\"render\",value:function(){return r.a.createElement(\"div\",null,r.a.createElement(\"h1\",null,\"USERS ROUTE\"))}}]),t}(n.Component),k=a(32),w=a(33),O=function(e){function t(){return Object(o.a)(this,t),Object(u.a)(this,Object(i.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(\"nav\",null,r.a.createElement(k.a,{to:\"/\"},\"Home\"),\" \",r.a.createElement(\"button\",null,r.a.createElement(k.a,{to:\"/users\"},\"Users Deck\"),\" \")),r.a.createElement(w.a,{exact:!0,path:\"/Home\",component:y}),r.a.createElement(w.a,{path:\"/users\",component:E}))}}]),t}(n.Component),j=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,r=new Array(n),c=0;c<n;c++)r[c]=arguments[c];return(a=Object(u.a)(this,(e=Object(i.a)(t)).call.apply(e,[this].concat(r)))).postUsersDeck=function(){var e=Object(f.a)(g.a.mark(function e(t){var n,r,c,s;return g.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return n=a.props.usersDeck,r=n.map(function(e,t){return{name:e.name,mana_cost:e.mana_cost,cmc:e.cmc,type_line:e.type_line,oracle_text:e.oracle_text,power:e.power,toughness:e.toughness,colors:e.colors,color_id:e.color_identity,setif:e.set,rarity:e.rarity}}),e.prev=2,e.next=5,fetch(\"http://localhost:9000/addCard\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({dataToDb:r})});case 5:return c=e.sent,e.next=8,c.json();case 8:return s=e.sent,a.setState({cardsAdded:s}),e.abrupt(\"return\",s);case 13:return e.prev=13,e.t0=e.catch(2),console.log(e.t0,\"catch caught an error\"),e.abrupt(\"return\",e.t0);case 17:case\"end\":return e.stop()}},e,this,[[2,13]])}));return function(t){return e.apply(this,arguments)}}(),a}return Object(m.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,r.a.createElement(\"button\",{onClick:this.postUsersDeck},\"Save Deck\"))}}]),t}(n.Component),y=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,r=new Array(n),c=0;c<n;c++)r[c]=arguments[c];return(a=Object(u.a)(this,(e=Object(i.a)(t)).call.apply(e,[this].concat(r)))).state={magicCards:[],usersDeck:[],deckName:\"\"},a.getMagicCards=Object(f.a)(g.a.mark(function e(){var t,n;return g.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,fetch(\"https://api.scryfall.com/cards/search?order=set&q=e%3Arna&unique=prints\");case 3:return t=e.sent,e.next=6,t.json();case 6:n=e.sent,a.setState({magicCards:n.data}),e.next=14;break;case 10:return e.prev=10,e.t0=e.catch(0),console.log(e.t0,\"catch caught an error\"),e.abrupt(\"return\",e.t0);case 14:case\"end\":return e.stop()}},e,this,[[0,10]])})),a.addCard=function(e){var t=a.state.usersDeck;t.push(a.state.magicCards[e]),a.setState({usersDeck:t})},a.deleteCard=function(e){var t=a.state.usersDeck;t.splice(e,1),a.setState({usersDeck:t})},a}return Object(m.a)(t,e),Object(l.a)(t,[{key:\"componentDidMount\",value:function(){this.getMagicCards().then(function(e){return console.log(e,\"did mount\")})}},{key:\"render\",value:function(){return r.a.createElement(w.a,null,r.a.createElement(\"section\",null,r.a.createElement(\"section\",{className:\"transBg\"},r.a.createElement(\"h1\",null,\"Deck Builder\"),r.a.createElement(\"img\",{src:\"https://zone1-vgu.netdna-ssl.com/wp-content/uploads/2019/01/MagicThe-Gathering-Ravnica-Allegiance-New-Mechanics-Breakdown.jpg\",alt:\"hero\",className:\"heroBg\"})),r.a.createElement(\"section\",{className:\"ui two column divided grid\"},r.a.createElement(\"div\",{className:\"twelve wide column scroll\"},r.a.createElement(O,null),r.a.createElement(v,{magicCards:this.state.magicCards,addCard:this.addCard}),\"}\"),r.a.createElement(\"div\",{className:\"four wide column rightColumnScroll\"},r.a.createElement(\"h2\",null,\"New Deck\"),r.a.createElement(b,{usersDeck:this.state.usersDeck,deleteCard:this.deleteCard}),r.a.createElement(j,{usersDeck:this.state.usersDeck})))))}}]),t}(n.Component),C=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,r=new Array(n),c=0;c<n;c++)r[c]=arguments[c];return(a=Object(u.a)(this,(e=Object(i.a)(t)).call.apply(e,[this].concat(r)))).state={logged:!0,username:\"\"},a.login=function(e){a.setState({logged:!0,username:e})},a}return Object(m.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"App\"},this.state.logged?r.a.createElement(y,{username:this.state.username}):r.a.createElement(h,{login:this.login}))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(r.a.createElement(C,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[19,1,2]]]);","extractedComments":[]}